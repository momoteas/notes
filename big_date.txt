
1. 配置网络：
		a. ip地址：
				vi /etc/sysconfig/network-script/ifconfig-ens..:
					IPADDR = 192.168.121.xxx
					NETMASK = 255.255.255.0
					GATEWAY = 与虚拟机的路由器地址保持一致
					DNS2 = 与路由器地址保持一致
					DNS1 = 114.114.114.114
		
		b. 开启网络：
				vi /etc/sysconfig/network
					NETWORKING = yes
					HOSTNAME = xxx
		
		c. 别名（域名）
				vi /etc/hosts
					192.168.121.xxx  master(别名)
					...
					...
		
		d. 测试
				ping ip地址 or 别名
		

2. 免密登录：
		a. 生成密码：
				ssh-keygen
		
		b. 将免密文件复制到目标客户机
				ssh-copy-id root@客户机 （注：以后将会以root的身份进行免密登录）
				

3. mysql安装：
		a. 安装mysql（mariadb.x86_64是mysql的一个社区版本）:
				yum install -y mysql
		
		b. 安装mariadb-server:
				yum install mariadb-server
		
		c. 初始化密码（通过上述mariadb.server进行初始化）：
				mysql_secure_installation命令设置密码


4. 远程文件操作：
		a. 远程拷贝：
				scp [-r] file_name root@客户机:/目标地址
		
		b. 远程下载：
				Alt + p 快捷键调研sfty窗口
				put file_name


5. vim快捷键：
		G: 		文件最后一行
		yy:		复制当前行
		dd:		删除当前行
		o:		下一行插入一行
		A：		定位至行尾
		ctrl + f: 向前翻页
		ctrl + b: 向后翻页
		
		
6. linux命令：
		export:	自定义变量，会对自己所在的shell进程及子进程生效				
		source:	读取并执行文件中的命令（source /etc/profile）
		service service_name start: 启动服务
		systemctl start service_name: 启动服务
		netstat -nltp: 查看网络连接，路由表等
		iptables: 防火墙
		firewalld: 防火墙
		chkconfig service_name on(off): 更新或查询系统服务启动等级
		chmod:	更改文件权限
		ps -ef: 
				ps: process state
				-e:	entire
				-f: Do full-format listing
		pstree:	查看当前shell进程树
		
7. zookeeper:
		a. 依赖：	jdk
		

8. shell编程
		a. 基本语法：
				$:	变量值引用
				$1, $2: 参数引用
				系统变量：$HOME, $PWD, $SHELL, $USER
				set: 查看系统变量
				
		b. 定义变量：
				变量=值：
						等号两侧不能有空格			
						变量名一般大写
						双引号和单引号有区别：双引号仅将空格脱意，单引号会将所有特殊字符脱意
				
				unset 变量名：
						撤销变量A
		
		将命令返回值赋给变量：
				A=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A

		特殊变量：
				$? 表示上一个命令退出的状态
				$$ 表示当前进程编号
				$0 表示当前脚本名称
				$n 表示n位置的输入参数（n代表数字，n>=1）
				$# 	表示参数的个数，常用于循环
				$*和$@ 都表示参数列表 

		运算符：
				格式 :expr m + n 或$((m+n)) 注意expr运算符间要有空格

		for循环：
				第一种：
					for N in 1 2 3
					do
						echo $N
					done
					或
					for N in 1 2 3; do echo $N; done
					或
					for N in {1..3}; do echo $N; done

				第二种：
					for ((i = 0; i <= 5; i++))
					do
						echo "welcome $i times"
					done

		while循环：
				第一种
					while expression
					do
					command
					…
					done

				第二种
					i=1
					while ((i<=3))
					do
					  echo $i
					  let i++
					done
		
		case语句：
				格式
					case $1 in
					start)
						echo "starting"
						;;
					stop)
						echo "stoping"
						;;
					*)
						echo "Usage: {start|stop} “
					esac

		read命令：
				read -p(提示语句)-n(字符个数) -t(等待时间) 
					ead -p "please input your name: " NAME

		if语句：
				语法
					if condition 
					then 
					   statements 
					[elif condition 
					   then statements. ..] 
					[else 
					   statements ] 
					fi

		判断语句：
				[ condition ] (注意condition前后要有空格)
					#非空返回true，可使用$?验证（0为true，>1为false）
					[ itcast ]

					#空返回false
					[  ]

				[ condition ] && echo OK || echo notok
					条件满足，执行后面的语句

		常用判断条件：
				= 字符串比较
				-lt 小于
				-le 小于等于
				-eq 等于
				-gt 大于
				-ge 大于等于
				-ne 不等于

				-r 有读的权限
				-w 有写的权限
				-x 有执行的权限
				-f 文件存在并且是一个常规的文件
				-s 文件存在且不为空
				-d 文件存在并是一个目录
				-b文件存在并且是一个块设备
				-L 文件存在并且是一个链接

		shell自定义函数：
				语法
				[ function ] funname [()]
				{
				    action;
				    [return int;]
				}

					function start()  / function start / start()

		脚本调试：
				sh -vx helloWorld.sh
				或者在脚本中增加set -x

				
9. hadoop安装相关问题：
		a. ./autogen.sh: 4: autoreconf: not found:
			因为没有安装automake 工具, sudo apt-get install autoconf automake libtool
				
		b. CMake Error: your CXX compiler: "CMAKE_CXX_COMPILER-NOTFOUND" was not found.   Please set CMAKE_CXX_COMPILER
			to a valid compiler path or name.

			出现这个问题的原因是缺少了g++编译工具执行命令：yum install gcc-c++       		
				
		c. hadoop安装依赖：
			maven, ant, protobuf(>2.5.0版本), findbugs, autoconf, auto make, libtool, cmake, openssl-devel, ncurses-devel,
			zlib-devel, gcc-c++
				

10. hadoop相关配置：
		a. 配置：
			../etc/hadoop/中的相关5个文件：hadoop.env.sh, core-site.xml, hdfs-site.xml, mapred-site.xml, yarn-site.xml；
		
		b. 配置：
			hadoop中bin, sbin文件夹中的命令的环境变量；

		c. 格式化namenode:
				hdfs namenode -format
				
		d. 自动化启动：
			1). 更改文件：../etc/hadoop/slaves，此文件为脚本自动启动datanode, nodemanager的slave机器
			2). 脚本命令：../sbin: 
				首先启动namenode，datanode: start-dfs.sh；
				其次启动resourcemanager, nodemanager: start-yarn.sh
		
		e. win7环境中使用eclipse编写hadoop客户端程序时，出现：java.lang.NullPointerException 
			at java.lang.ProcessBuilder.start(Unknown Source) at org.apache.hadoop.util.Shell.runCommand(Shell.java:482)
			解决方法：
				1). 使用在windows环境编译的hadoop中的../bin 和 ../lib文件夹中的文件；
				2). 给../bin文件夹配置环境变量；
				3). 在../system32文件夹中加入hadoop.dll文件；
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
		
		
		
		
		
		
		
		
		
		
		
				